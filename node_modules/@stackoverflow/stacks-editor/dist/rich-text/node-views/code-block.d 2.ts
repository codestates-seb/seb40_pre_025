import { Node as ProsemirrorNode } from "prosemirror-model";
import { EditorView, NodeView } from "prosemirror-view";
import type { IExternalPluginProvider } from "../../shared/editor-plugin";
declare type getPosParam = boolean | (() => number);
/**
 * View with <code> wrapping/decorations for code_block nodes
 */
export declare class CodeBlockView implements NodeView {
    private additionalProcessors;
    dom: HTMLElement | null;
    contentDOM?: HTMLElement | null;
    private language;
    constructor(node: ProsemirrorNode, view: EditorView, getPos: getPosParam, additionalProcessors: IExternalPluginProvider["codeblockProcessors"]);
    update(node: ProsemirrorNode): boolean;
    private render;
    /** Switches the view between editor mode and processor mode */
    private toggleView;
    /** Gets the codeblock language from the node */
    private getLanguageFromBlock;
    /** Updates the edit/code view */
    private updateCodeBlock;
    /** Updates the processor view */
    private updateProcessor;
    /** Checks all the processors to see if any apply */
    private getValidProcessorResult;
    /** Gets all processors for the specified language string */
    private getProcessors;
}
export {};
