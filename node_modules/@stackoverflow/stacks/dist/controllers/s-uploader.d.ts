import * as Stacks from "../stacks";
export declare class UploaderController extends Stacks.StacksController {
    static targets: string[];
    private inputTarget;
    private previewsTarget;
    private uploaderTarget;
    private boundDragEnter;
    private boundDragLeave;
    private static readonly FILE_DISPLAY_LIMIT;
    private static readonly MAX_FILE_SIZE;
    connect(): void;
    disconnect(): void;
    /**
     * Handles rendering the file preview state on input change
     */
    handleInput(): void;
    /**
     * Resets the Uploader to initial state
     */
    reset(): void;
    /**
     * Set hide/show and disabled state on elements depending on preview state
     * @param  {boolean} shouldPreview - Uploader is entering a preview state
     */
    private handleVisible;
    /**
     * Adds a DOM element to preview a selected file
     * @param  {FilePreview} file
     */
    private addFilePreview;
    /**
     * Toggles display and disabled state for select elements on valid input
     * @param  {boolean} active - Uploader is in active state (typically on 'dragenter')
     */
    private handleUploaderActive;
    /**
     * Converts the file data into a data URL
     * @param  {File} file
     * @returns an object containing a FilePreview object
     */
    private fileToDataURL;
    /**
     * Gets an array of FilePreviews from a FileList
     * @param  {FileList|[]} files
     * @returns an array of FilePreview objects from a FileList
     */
    private getDataURLs;
}
