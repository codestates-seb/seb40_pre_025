{"version":3,"file":"index.es.js","sources":["../src/schema-basic.js"],"sourcesContent":["import {Schema} from \"prosemirror-model\"\n\nconst pDOM = [\"p\", 0], blockquoteDOM = [\"blockquote\", 0], hrDOM = [\"hr\"],\n      preDOM = [\"pre\", [\"code\", 0]], brDOM = [\"br\"]\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\"\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{tag: \"p\"}],\n    toDOM() { return pDOM }\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"blockquote\"}],\n    toDOM() { return blockquoteDOM }\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    group: \"block\",\n    parseDOM: [{tag: \"hr\"}],\n    toDOM() { return hrDOM }\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {level: {default: 1}},\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{tag: \"h1\", attrs: {level: 1}},\n               {tag: \"h2\", attrs: {level: 2}},\n               {tag: \"h3\", attrs: {level: 3}},\n               {tag: \"h4\", attrs: {level: 4}},\n               {tag: \"h5\", attrs: {level: 5}},\n               {tag: \"h6\", attrs: {level: 6}}],\n    toDOM(node) { return [\"h\" + node.attrs.level, 0] }\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{tag: \"pre\", preserveWhitespace: \"full\"}],\n    toDOM() { return preDOM }\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\"\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      src: {},\n      alt: {default: null},\n      title: {default: null}\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [{tag: \"img[src]\", getAttrs(dom) {\n      return {\n        src: dom.getAttribute(\"src\"),\n        title: dom.getAttribute(\"title\"),\n        alt: dom.getAttribute(\"alt\")\n      }\n    }}],\n    toDOM(node) { let {src, alt, title} = node.attrs; return [\"img\", {src, alt, title}] }\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{tag: \"br\"}],\n    toDOM() { return brDOM }\n  }\n}\n\nconst emDOM = [\"em\", 0], strongDOM = [\"strong\", 0], codeDOM = [\"code\", 0]\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: {default: null}\n    },\n    inclusive: false,\n    parseDOM: [{tag: \"a[href]\", getAttrs(dom) {\n      return {href: dom.getAttribute(\"href\"), title: dom.getAttribute(\"title\")}\n    }}],\n    toDOM(node) { let {href, title} = node.attrs; return [\"a\", {href, title}, 0] }\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{tag: \"i\"}, {tag: \"em\"}, {style: \"font-style=italic\"}],\n    toDOM() { return emDOM }\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [{tag: \"strong\"},\n               // This works around a Google Docs misbehavior where\n               // pasted content will be inexplicably wrapped in `<b>`\n               // tags with a font-weight normal.\n               {tag: \"b\", getAttrs: node => node.style.fontWeight != \"normal\" && null},\n               {style: \"font-weight\", getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null}],\n    toDOM() { return strongDOM }\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{tag: \"code\"}],\n    toDOM() { return codeDOM }\n  }\n}\n\n// :: Schema\n// This schema roughly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({nodes, marks})\n"],"names":["const"],"mappings":"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"}